<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.ItemRepository">

    <sql id="SELECT_BASE">
        SELECT
            itemKey,
            userKey,
            cateKey,
            subject,
            content,
            price,
            itemtype,
            purtype,
            tradestatus,
            writeDate,
            viewcnt
    </sql>

    <sql id="d1_item_base">
        itemKey,
        userKey,
        cateKey,
        subject,
        content,
        price,
        itemtype,
        purtype,
        tradestatus,
        writeDate,
        viewcnt
    </sql>

    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <id column="userKey" property="userKey" />
        <result column="username" property="username" />
        <result column="useralias" property="useralias" />
        <result column="tel" property="tel" />
        <result column="userimg" property="userimg" />
    </resultMap>

    <resultMap id="mapItem" type="com.lec.spring.domain.Item">
        <id column="itemKey" property="itemKey" />
        <result column="userKey" property="userKey" />
        <result column="cateKey" property="cateKey" />
        <result column="subject" property="subject" />
        <result column="content" property="content" />
        <result column="price" property="price" />
        <result column="itemtype" property="itemtype" />
        <result column="purtype" property="purtype" />
        <result column="tradestatus" property="tradestatus" />
        <result column="writeDate" property="writeDate" />
        <result column="viewcnt" property="viewcnt" />
    </resultMap>

    <resultMap id="mapLocation" type="com.lec.spring.domain.Location">
        <id column="userKey" property="userKey" />
        <result column="itemKey" property="itemKey" />
        <result column="addrName" property="addrName" />
        <result column="placeName" property="placeName" />
        <result column="addrDetail" property="addrDetail" />
    </resultMap>

    <resultMap id="mapCategory" type="com.lec.spring.domain.Category">
        <id column="cateKey" property="cateKey" />
        <result column="catename" property="catename" />
    </resultMap>

    <insert id="write" flushCache="true" parameterType="com.lec.spring.domain.Item"
            useGeneratedKeys="true" keyColumn="itemKey" keyProperty="itemKey">
        INSERT INTO d1_item
        (userKey, cateKey, subject, content, price, itemtype, purtype, tradestatus, writeDate, viewcnt)
        VALUES
        (#{userKey}, #{cateKey}, #{subject}, #{content}, #{price}, #{itemtype}, #{purtype}, #{tradestatus}, #{writeDate}, #{viewcnt})
    </insert>

    <update id="chTradeState" flushCache="true">
        UPDATE d1_item
        SET tradeStatus = true
        WHERE itemKey = #{itemKey}
    </update>

    <update id="incViewCnt" flushCache="true">
        UPDATE d1_item
        SET viewcnt = viewcnt + 1
        WHERE itemKey = #{itemKey}
    </update>

    <update id="modify" flushCache="true" parameterType="com.lec.spring.domain.Item">
        UPDATE d1_item
        SET
            subject = #{subject},
            content = #{content},
            price = #{price},
            cateKey = #{cateKey},
            itemtype = #{itemtype},
            purtype = #{purtype}
        WHERE itemKey = #{itemKey}
    </update>

    <delete id="delete" flushCache="true"
            parameterType="com.lec.spring.domain.Item">
        DELETE FROM d1_item WHERE itemKey = #{itemKey}
    </delete>

    <select id="findAllItem" resultMap="mapItem">
        <include refid="SELECT_BASE" />
        FROM d1_item
        WHERE 1 = 1
    </select>

    <select id="getLatestItems" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT i.*
        FROM d1_item i
        JOIN d1_user u ON i.userKey = u.userKey
        WHERE i.tradestatus = false
        AND u.state = 'N'
        ORDER BY writeDate DESC
        LIMIT 20
    </select>

    <select id="getWeeklyItems" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT i.*
        FROM d1_item i
        JOIN d1_user u ON i.userKey = u.userKey
        WHERE i.tradestatus = false
        AND u.state = 'N'
        AND i.cateKey = (
            SELECT i2.cateKey
            FROM d1_payment p
            JOIN d1_item i2 ON p.itemKey = i2.itemKey
            WHERE p.purchaseDate &gt;= DATE_SUB(NOW(), INTERVAL 7 DAY)
            GROUP BY i2.cateKey
            ORDER BY COUNT(*) DESC
            LIMIT 1
        )
        ORDER BY i.writeDate DESC
    </select>

    <select id="getSellerItems" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE tradestatus = false AND userKey = #{userKey}
        ORDER BY writeDate DESC
        LIMIT 20
    </select>

    <select id="getItemsLikeCate" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE tradestatus = false AND cateKey = #{cateKey}
        ORDER BY writeDate DESC
        LIMIT 20
    </select>

    <select id="searchItems" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE 1 = 1
        AND tradestatus = false
        <if test="rangeStart != null and rangeEnd != null">
            AND cateKey &gt;= #{rangeStart} AND cateKey &lt; #{rangeEnd}
        </if>
        <if test="min != null">
            AND price &gt;= #{min}
        </if>
        <if test="max != null">
            AND price &lt;= #{max}
        </if>
    </select>

    <select id="searchItemsByKeyword" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE subject LIKE CONCAT('%', #{keyword}, '%') ESCAPE '!'
        AND tradestatus = false
    </select>

    <select id="findByItemKey" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT itemKey
        FROM d1_item
        WHERE itemKey = #{itemKey}
    </select>

    <select id="findItemsByKeys" parameterType="list" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE itemKey IN
        <foreach collection="list" item="key" open="(" separator="," close=")">
            #{key}
        </foreach>
    </select>

    <select id="findItemByItemKey" resultType="com.lec.spring.domain.Item">
        SELECT *
        FROM d1_item
        WHERE itemKey = #{itemKey}
    </select>

    <select id="findByCategory" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE cateKey = #{cateKey}
    </select>

    <select id="findByUserKey" resultType="com.lec.spring.DTO.ItemDTO">
        SELECT *
        FROM d1_item
        WHERE userKey = #{userKey}
    </select>

    <select id="getAvgMaxMinPrice" resultType="map">
        SELECT AVG(price) AS AVG, MAX(price) AS MAX, MIN(price) AS MIN
        FROM d1_item
        WHERE subject LIKE CONCAT('%', #{keyword}, '%') ESCAPE '!'
    </select>
</mapper>