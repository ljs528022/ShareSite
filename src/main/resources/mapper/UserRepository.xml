<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.UserRepository">
    <resultMap id="mapAuth" type="com.lec.spring.domain.Authority">
        <result column="authKey" property="authKey" />
        <result column="authname" property="authname" />
    </resultMap>

    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <result column="userKey" property="userKey" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="useralias" property="useralias" />
        <result column="email" property="email" />
        <result column="regtype" property="regtype" />
        <result column="userimg" property="userimg" />
        <result column="regDate" property="regDate" />
        <result column="state" property="state" />
        <result column="visitcnt" property="visitcnt" />
        <result column="tradecnt" property="tradecnt" />
        <collection property="u_auth" resultMap="mapAuth"/>
    </resultMap>

    <resultMap id="mapItem" type="com.lec.spring.domain.Item">
        <result column="itemkey" property="itemkey" />
        <result column="subject" property="subject" />
        <result column="price" property="price" />
        <result column="tradestatus" property="tradestatus" />
        <result column="writeDate" property="writeDate" />
        <result column="img1" property="img1" />
    </resultMap>

    <sql id="SELECT">
        SELECT
            userKey,
            username,
            password,
            useralias,
            email,
            regtype,
            userimg,
            regDate,
            state,
            visitcnt,
            tradecnt,
        FROM
            d1_user
        WHERE
            1 = 1
    </sql>

    <sql id="d1_user_base">
        userKey,
        username,
        password,
        useralias,
        email,
        regtype,
        userimg,
        regDate,
        state,
        visitcnt,
        tradecnt,
        auth
    </sql>

    <select id="findByUserKey" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE userKey = #{userKey}
    </select>

    <select id="findSellerInfoByUserKey" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE userKey = #{userKey}
    </select>

    <select id="findByUserName" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE username = #{username}
    </select>

    <select id="findByUsernameOrEmail" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE username = #{username} OR email = #{email}
    </select>

    <select id="findByUseralias" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE useralias = #{useralias}
    </select>

    <select id="findByEmail" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE email = #{email}
    </select>

    <select id="findUsersByUserKeys" resultType="com.lec.spring.domain.User">
        SELECT * FROM d1_user
        WHERE userKey IN
        <foreach collection="list" item="key" open="(" separator="," close=")">
            #{key}
        </foreach>
    </select>

    <select id="existsByUsername" resultType="int" parameterType="String">
        SELECT COUNT(*)
        FROM d1_user
        WHERE username = #{username}
    </select>

    <select id="countByUserKeyStartWith" resultType="long" parameterType="string">
        SELECT COUNT(*)
        FROM d1_user
        WHERE CAST(userKey AS CHAR) LIKE CONCAT(#{dataPrefix}, '%')
    </select>

    <!-- 회원가입 -->
    <insert id="register"
            flushCache="true"
            parameterType="com.lec.spring.domain.User"
            keyColumn="userKey"
            keyProperty="userKey">
        INSERT INTO d1_user(userKey, username, password, useralias, email, userimg, regtype, state, regDate, visitcnt, tradecnt, auth, emailVerified)
        VALUES(#{userKey}, #{username}, #{password}, #{useralias}, #{email}, #{userimg}, #{regtype}, #{state}, #{regDate}, 1, 0, #{auth}, #{emailVerified})
    </insert>

    <!-- 회원 정보 수정 -->
    <update id="update" flushCache="true" parameterType="com.lec.spring.domain.User">
        UPDATE d1_user
        SET
            username = #{username},
            useralias = #{useralias},
            userIntro = #{userIntro},
            editedDate = #{editedDate}
            <if test="email != null and email != ''">
                , email = #{email}
            </if><if test="password != null and password != ''">
                , password = #{password}
            </if><if test="userimg != null and userimg != ''">
                , userimg = #{userimg}
            </if>
        WHERE userKey = #{userKey}
    </update>

    <update id="includeVisitCnt" flushCache="true">
        UPDATE d1_user
        SET visitcnt = visitcnt + 1
        WHERE username = #{username}
    </update>

    <update id="includeTradeCnt" flushCache="true">
        UPDATE d1_user
        SET tradecnt = tradecnt + 1
        WHERE userKey = #{userKey}
    </update>

    <select id="getReviewUsers" parameterType="list" resultType="com.lec.spring.domain.User">
        SELECT *
        FROM d1_user
        WHERE userKey IN
        <foreach item="key" collection="list" open="(" separator="," close=")">
            #{key}
        </foreach>
    </select>

    <update id="changeUserState" flushCache="true">
        UPDATE d1_user
        SET state = #{state}, editedDate = #{time}
        WHERE userKey = #{userKey}
    </update>

    <update id="withdrawOver7Days">
        UPDATE d1_user
        SET state = 'S'
        WHERE state = 'R'
        AND editedDate &lt;= DATE_SUB(NOW(), INTERVAL 7 DAY)
    </update>
</mapper>